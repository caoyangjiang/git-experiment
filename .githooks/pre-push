#! /bin/bash

############## Protect newcodec branch from direct push ############## 

protected_branch='newcodec'
current_branch=$(git symbolic-ref HEAD --short)

if [ $protected_branch = $current_branch ]
then
    echo -e "\n[PRE-PUSH HOOK ERROR]: Do not push into \"$protected_branch\" branch!\n"
    exit 1 # push will not execute
fi

############## Add commit note############## 

# obtain repo local path
top_dir=$(git rev-parse --show-toplevel)

# find all module names according
# to directories directly under "module"
all_modules=( $(find $top_dir/modules  -maxdepth 1 -mindepth 1 -type d -exec basename {} \;) )
modified_modules_dirs=(  $(git diff --dirstat=files,0 @{upstream}) )

# in case this is new branch
parent_branch=$(git show-branch | grep '*' | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//')

if [[ $modified_modules_dirs == "" ]]; then
 modified_modules_dirs=( $(git diff --dirstat=files,0 origin/$parent_branch) )  
fi

# regardless find any module or not
# always run "core" unit test
modified_modules_dirs+=('core')

# gather modules whose test
# will be run
run_test_modules=()
for module in ${all_modules[@]}
do
    for dir in ${modified_modules_dirs[@]}
    do
        if [[ $dir =~ $module ]]; then
           run_test_modules+=($module)
           break
        fi
    done
done

# gather modules whose test
# will be disabled
disable_test_modules=()
for module in ${all_modules[@]}
do
    find="NOTFOUND"
    for enabled in ${run_test_modules[@]}
    do
        if [[ $module = $enabled ]]; then
            find="FOUND"
            break
        fi
    done

    if [[ $find == "NOTFOUND" ]]; then
        disable_test_modules+=($module)
    fi
done


# form message

# form enabled test
enable_module="enable_test:"
for i in ${!run_test_modules[@]}
do 
    enable_module+="hvr_" 
    enable_module+=${run_test_modules[i]}

    if [[ $((i+1)) == ${#run_test_modules[@]} ]]; then
        enable_module+=";"
    else 
        enable_module+=","
    fi
done

# form disabled test
disable_module="disable_test:"
for i in ${!disable_test_modules[@]}
do 
    disable_module+="hvr_" 
    disable_module+=${disable_test_modules[i]}

    if [[ $((i+1)) == ${#disable_test_modules[@]} ]]; then
        disable_module+=";"
    else 
        disable_module+=","
    fi
done

# combine
commit_note=$enable_module$disable_module
echo "Commit note: $commit_note" 

# clear anything in there
git notes remove

# add notes
git notes add -m $commit_note

# push to github
git push origin refs/notes/*